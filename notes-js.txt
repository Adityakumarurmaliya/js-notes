// 1. Ways to print in JavaScript
// console.log("Hello World");
// alert("me");
// document.write("this is document write")

// 2. Javascript console API
// console.log("Hello World", 4 + 6, "Another log");
// console.warn("this is warning");
// console.error("This is an error");

// 3. JavaScript Variables
// What are Variables? - Containers to store data values

/*
multi 
line 
commment
*/

var number1 = 34;
var number2 = 56;
// console.log(number1 + number2);

// 4. Data types in JavaScript
// Numbers
var num1 = 455;
var num2 = 56.76;

// String
var str1 = "This is a string";
var str2 = 'This is also a string';

// Objects
var marks = {
    ravi: 34,
    shubham: 78,
    harry: 99.977
}
// console.log(marks);

// Booleans
var a = true;
var b = false;
// console.log(a, b);

// var und = undefined;
var und;
// console.log(und);

var n = null;
// console.log(n);
/*
At a very high level, there are two types of data types in JavaScript
1. Primitive data types: undefined, null, number, string, boolean, symbol
2. Reference data types: Arrays and Objects
*/

var arr = [1, 2, "bablu", 4, 5]
// console.log(arr)

// Operators in JavaScript
// Arithmetic Operators
var a = 100;
var b = 10;
// console.log("The value of a + b is ", a+b);
// console.log("The value of a - b is ", a-b);
// console.log("The value of a * b is ", a*b);
// console.log("The value of a / b is ", a/b);

// Assignment Operators
var c = b;
// c += 2;
// c -= 2; // c = c - 2;
// c *= 2;
// c /= 2;
// console.log(c);

// Comparison Operators
var x = 34;
var y = 56;
// console.log(x == y);
// console.log(x >= y);
// console.log(x <= y);
// console.log(x > y);
// console.log(x < y);

// Logical Operators

// Logical and
// console.log(true && true)
// console.log(true && false)
// console.log(false && true)
// console.log(false && false)

// Logical or
// console.log(true || true)
// console.log(true || false)
// console.log(false || true)
// console.log(false || false)

// Logical not
// console.log(!false);
// console.log(!true);

// Function in JavaScript
function avg(a, b) {
    c = (a + b) / 2;
    return c;
}
// DRY = Do not repeat yourself
c1 = avg(4, 6);
c2 = avg(14, 16);
// console.log(c1, c2);

// Conditionals in JavaScript
/*
var age = 41;
// Single if statement
if(age > 18){
    console.log('You can drink rasna water');
}
// if - else statement
// if(age > 18){
//     console.log('You can drink rasna water');
// }
// else{
//     console.log('You cannot drink rasna water');
// }

age = 25;
// if-else Ladder
if(age > 32){
    console.log("You are not a kid");
}
else if(age >26){
    console.log("Bachhe nahi rahe");
}
else if(age >22){
    console.log("Yes Bachhe nahi rahe");
}
else if(age >18){
    console.log("18 Bachhe nahi rahe");
}
else{
    console.log("Bachhe rahe");
}
console.log("End of ladder");
*/

var arr = [1, 2, 3, 4, 5, 6, 7];
// console.log(arr);
// for(var i=0;i<arr.length;i++){
//     if(i==2){
//         // break;
//         continue;
//     }
//     console.log(arr[i])
// }

// arr.forEach(function(element){
//     console.log(element);
// })
// const ac = 0;
// ac++;
// ac = ac +1;
// let j = 0;
// while(j<arr.length){
//     console.log(arr[j]);
//     j ++;
// }

// do{
//     console.log(arr[j]);
//     j++;
// } while (j < arr.length);

let myArr = ["Fan", "Camera", 34, null, true];
// Array Methods
// console.log(myArr.length);
// myArr.pop();  //arry last element will removed
// myArr.push("harry")  // harry added in last
// myArr.shift() // frist element will removed
//myArr.unshift("Harry") // harry will add in frist 0th index
// const newLen = myArr.unshift("Harry") // 6 :- this will return new arr length
// console.log(newLen);6 :- this will return new arr length
// console.log(myArr);

// String Methods in JavaScript
let myLovelyString = "Harry is a good boy good good Harry";
// console.log(myLovelyString.length) //get length of string
// console.log(myLovelyString.indexOf("good")) // to find index of good 
// console.log(myLovelyString.lastIndexOf("good")) // where its ending

// console.log(myLovelyString.slice(1,4)) // arr :-1 include and 4 exclude
d = myLovelyString.replace("Harry", "Rohan"); //(Replace method frist method ko hi replace ker ta hai)
// d = d.replace("good", "bad"); //Harry is a bad boy good good Harry is a good boy good good ( this will work only frist occurence :- its mean only frist good will convert into b)
// console.log(d, myLovelyString) //Rohan is a good boy good good Harry is a good boy good good

let myDate = new Date();
// console.log(myDate); // this will provide you current time
// console.log(myDate.getTime()); // this will give you time in seconds
// console.log(myDate.getFullYear());// this will provide your current year like :-2023
// console.log(myDate.getDay()); //this will provide  you current day like mon-0, tue-1,wed -2, thurs-3 fri-4 sat-5 sun -6 so ytyhis will provide you day between 1to6 so today is :-3
// console.log(myDate.getMinutes()); // get cuurrent minutes
// console.log(myDate.getHours()); // get  current  hours
 
// DOM Manipulation
you can mauplate HTML doc.
let elem = document.getElementById('click');
// console.log(elem); // click to button 
document.getElementById('click').style.border='blue'; // this will make buttone color blue
document.getElementById('click').style.border=' 2px solid blue'; // add css by doc malnuplating of html(this will set 2px border blue)
let elemClass = document.getElementsByClassName("container")
// console.log(elemClass);
// elemClass[0].style.background = "yellow"; // this will make element background yellow 
//elemClass[0].classList.add("bg-primary") // is ko ker ne se button div ke undder "bg-primary" class add ho jayegi or jo bhi  color is calss maim hoga wo reflect hoga screen mai
//elemClass[0].classList.add("text-success") // again  div  mai ek or new class add ho jaygi "text-success" jo bhi custome css property is class mai avilable hogi wo reflect ho jayegi 
//elemClass[0].classList.remove("text-success") ; // (try this in console)this willl remove this class and css property will remove and again color will white
//elemClasss[0].innerHTML // this will use to acess the class 
// console.log(elem.innerHTML); // 
// console.log(elem.innerText); //

// console.log(elemClass[0].innerHTML);
// console.log(elemClass[0].innerText); 
tn = document.getElementsByTagName('div')
// console.log(tn) //you all the div present in doc
createdElement = document.createElement('p');// to creat element
createdElement.innerText = "This is a created para";// to add para by js
tn[0].appendChild(createdElement); //  to add append child - tn[0]- is our frist div
createdElement2 = document.createElement('b');
createdElement2.innerText = "This is a created bold";
tn[0].replaceChild(createdElement2, createdElement); // this will replace 
// removeChild(element); ---> removes an element
 
// Selecting using Query
// sel = document.querySelector('.container')
// console.log(sel);// you will get frist container class element it mean whole div part.
// sel = document.querySelectorAll('.container') // get all div present located with container class
// console.log(sel)

//in html you have to create onclick="clicked()"
// function clicked(){ 
//     console.log('The button was clicked') // jise hi koi click ker click function ko call ker do - app jitne barr click kero ge console mai uttne bar print hoga
// }
// window.onload = function(){
//     console.log('The document was loaded')

// }
// Events in JavaScript
// firstContainer.addEventListener('click', function(){
//     document.querySelectorAll('.container')[1].innerHTML = "<b> We have clicked</b>"
//     console.log("Clicked on Container")
// })

// firstContainer.addEventListener('mouseover', function(){
//     console.log("Mouse on Container") // jise hi mouse cointaner ke unnder jaye ga ye frie ho jayega console mai
// })

// firstContainer.addEventListener('mouseout', function(){
//     console.log("Mouse out of Container");  // jab mouse container ke bahar kero ge then this will fire
// })

// let prevHTML = document.querySelectorAll('.container')[1].innerHTML;
// firstContainer.addEventListener('mouseup', function(){
//     document.querySelectorAll('.container')[1].innerHTML = prevHTML; //jab app choddo ge to previous element ho jaye 
//     console.log("Mouse up when clicked on Container");
// })

// firstContainer.addEventListener('mousedown', function(){
//     document.querySelectorAll('.container')[1].innerHTML = "<b> We have clicked</b>" // or jab mouse click kero ge tab ye screen mai aa jayee 
//     console.log("Mouse down when clicked on Container");
// })


// Arrow Functions
// function summ(a, b){
//     return a+b;
// }
summ = (a,b)=>{
    return a+b;
}

logKaro = ()=>{
    document.querySelectorAll('.container')[1].innerHTML = "<b> Set interval fired</b>" // ye pe 2000 mili-second ker ke badd ye fire ho jaye ga sceen mai
    console.log("I am your log")
}
// SetTimeout and setinterval set time out ka phela argument ek function hota hai and 2nd argument is ki kittne second ke baad run ker na chatte ho (5000-2000) is mili-second
// clr = setTimeout(logKaro, 5000); // setTimeout according to 2nd argument run hoga 5000 mili second baad
// clr = setInterval(logKaro, 2000); // agar kisi cheez ko  repeatedly ker na ho to setInterval ka use kero
// use clearInterval(clr)/clearTimeout(clr) to cancel setInterval/setTimeout

// JavaScript localStorage
// localStorage.setItem('name', 'harry') 
// localStorage 
// localStorage.getItem('name')
// localStorage.removeItem('name') //remove for one item
// localStorage.clear(); // remove all item from storage

// Json 
// obj = {name: "harry", length: 1, a: {this: 'tha"t'}} // ye ek object hai i s ko hum ne below line mai string mai convert ker diya hai
// jso = JSON.stringify(obj); // we convert i t into string
// console.log(typeof jso)
// console.log(jso)
// parsed = JSON.parse(`{"name":"harry","length":1,"a":{"this":"that"}}`)
// console.log(parsed);

// Template literals - Backticks
a = 34;
console.log(`this is my ${a}`) // output:- this is my 34 -${a} replace value with that
